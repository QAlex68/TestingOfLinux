{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b61e8170>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step1", "rerun": "0"}, "1": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b61e8170>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step2", "rerun": "0"}}, "suite_name": "test_negative.py"}, "1": {"suite_name": "test_positive.py", "tests": {"0": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b5fc4b60>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step1", "rerun": "0"}, "1": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b5fc4b60>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step2", "rerun": "0"}, "2": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b5fc4b60>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step4", "rerun": "0"}, "3": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b5fc4b60>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step6", "rerun": "0"}, "4": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b5fc4b60>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step7", "rerun": "0"}, "5": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b5fc4b60>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step8", "rerun": "0"}, "6": {"status": "ERROR", "message": "@pytest.fixture(autouse=True, scope='module')\n    def deploy():\n        res = []\n>       upload_files(f\"{data['ip']}\",\n                     f\"{data['user']}\",\n                     f\"{data['password']}\",\n                     '/tests/p7zip-full.deb',\n                     '/home/user2/p7zip-full.deb')\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsshcheckers.py:45: in upload_files\n    sftp.put(local_path, remote_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.sftp_client.SFTPClient object at 0x7090b5fc4b60>, localpath = '/tests/p7zip-full.deb', remotepath = '/home/user2/p7zip-full.deb', callback = None, confirm = True\n\n    def put(self, localpath, remotepath, callback=None, confirm=True):\n        \"\"\"\n        Copy a local file (``localpath``) to the SFTP server as ``remotepath``.\n        Any exception raised by operations will be passed through.  This\n        method is primarily provided as a convenience.\n    \n        The SFTP operations use pipelining for speed.\n    \n        :param str localpath: the local file to copy\n        :param str remotepath: the destination path on the SFTP server. Note\n            that the filename should be included. Only specifying a directory\n            may result in an error.\n        :param callable callback:\n            optional callback function (form: ``func(int, int)``) that accepts\n            the bytes transferred so far and the total bytes to be transferred\n        :param bool confirm:\n            whether to do a stat() on the file afterwards to confirm the file\n            size\n    \n        :return: an `.SFTPAttributes` object containing attributes about the\n            given file\n    \n        .. versionadded:: 1.4\n        .. versionchanged:: 1.7.4\n            ``callback`` and rich attribute return value added.\n        .. versionchanged:: 1.7.7\n            ``confirm`` param added.\n        \"\"\"\n>       file_size = os.stat(localpath).st_size\nE       FileNotFoundError: [Errno 2] No such file or directory: '/tests/p7zip-full.deb'\n\n../.venv/lib/python3.12/site-packages/paramiko/sftp_client.py:757: FileNotFoundError\n", "test_name": "test_step5", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 7}}}}, "date": "October 09, 2024", "start_time": 1728479764.9987495, "total_suite": 2, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "9", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "9"}